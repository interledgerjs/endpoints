{"version":3,"file":"ws.js","sourceRoot":"","sources":["../src/ws.ts"],"names":[],"mappings":"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","sourcesContent":["import * as WebSocket from 'ws'\nimport { Duplex } from 'stream'\nimport { IlpMessage, deserializeIlpMessage, serializeIlpMessage, isIlpMessage } from './message'\n\n/**\n * Wraps a WebSocket connection so that it exposes the standard stream.Duplex interface.\n */\nexport class WebSocketMessageStream<M> extends Duplex {\n\n  protected _socket: WebSocket\n  protected _buffering: boolean\n  protected _buffer: Array<M>\n  protected _deserializer: (data: Buffer) => M\n  protected _serializer: (message: M) => Buffer\n  protected _isMessage: (message: any) => message is M\n  constructor (\n    socket: WebSocket,\n    deserializer: (data: Buffer) => M,\n    serializer: (message: M) => Buffer,\n    isMessage: (message: any) => message is M) {\n    super({\n      allowHalfOpen: false,\n      objectMode: true\n    })\n\n    this._buffering = false\n    this._buffer = new Array()\n    this._deserializer = deserializer\n    this._serializer = serializer\n    this._isMessage = isMessage\n\n    this._socket = socket\n    this._socket.on('close', (code: number, reason: string) => {\n      this._end()\n    })\n\n    this._socket.on('error', (err: Error) => {\n      this.emit('error', err)\n    })\n\n    this._socket.on('message', (data: WebSocket.Data) => {\n      if (Buffer.isBuffer(data)) {\n        try {\n          const message = deserializer(data)\n          if (this._buffering) {\n            // We are buffering\n            this._buffer.push(message)\n          } else {\n            this._buffering = !this.push(message)\n          }\n        } catch (e) {\n          this._socket.close(1008, 'unable to deserialize message')\n          this.emit('error', e)\n          this._end()\n        }\n      } else {\n        this._socket.close(1003, 'unexpected message type')\n        this.emit('error', new Error('unexpected message type received'))\n        this._end()\n      }\n    })\n\n    // TODO - Implement a heartbeat\n\n  }\n\n  private _end () {\n    while (this._buffer.length > 0) {\n      this.push(this._buffer.shift())\n    }\n    this.push(null)\n  }\n\n  _write (chunk: any, encoding: string, callback: (error?: Error | null) => void): void {\n    if (this._isMessage(chunk)) {\n      const bytes = this._serializer(chunk)\n      this._socket.send(bytes, callback)\n    } else {\n      callback(new Error('unexpected message type. expected a '))\n    }\n  }\n\n  _read (size: number) {\n    if (this._buffering) {\n      this._buffering = false\n      while (this._buffer.length > 0 && !this._buffering) {\n        this._buffering = !(this.push(this._buffer.shift()))\n      }\n    }\n  }\n\n  _destroy (error: Error | null, callback: (error: Error | null) => void): void {\n    this._socket.terminate()\n    callback(error)\n  }\n\n  _final (callback: (error?: Error | null) => void): void {\n    try {\n      this._socket.close(1000, 'connection closed')\n      callback()\n    } catch (e) {\n      callback(e)\n    }\n  }\n\n}\n\n/**\n * A `stream.Duplex` implementation for `IlpMessage` objects that uses a WebSocket as the underlying message stream.\n *\n * An instance of this class can be passed to the constructor of `IlpTransport`\n */\nexport class WebSocketIlpMessageStream extends WebSocketMessageStream<IlpMessage> {\n  constructor (socket: WebSocket) {\n    super(socket, deserializeIlpMessage, serializeIlpMessage, isIlpMessage)\n  }\n}\n"]}